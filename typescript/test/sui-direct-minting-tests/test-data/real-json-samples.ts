/**
 * Real JSON Samples Extracted from Token Dashboard
 * 
 * These samples are based on actual token-dashboard implementation patterns
 * and represent the real JSON structure used in production SUI deposits.
 */

/**
 * Real SUI deposit receipt sample based on token-dashboard implementation
 * This matches the structure generated by generateDepositReceiptFile()
 */
export const REAL_SUI_DEPOSIT_RECEIPT_SAMPLE = {
  // Depositor information (from receipt.depositor.identifierHex)
  depositor: {
    identifierHex: "5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1"
  },
  
  // Network information (SUI testnet)
  networkInfo: {
    chainName: "Sui",
    chainId: "2" // SUI testnet chain ID
  },
  
  // Cryptographic parameters
  refundLocktime: "1940540",
  refundPublicKeyHash: "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
  blindingFactor: "3456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef012",
  walletPublicKeyHash: "b776877c3f9a78f5e3fc7b8b7e5c4a3a2c1a1b2c3d4e5f6a7b8c9d0e1f2a3b4c",
  
  // User addresses
  userWalletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
  btcRecoveryAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
  
  // Extra data for cross-chain operations
  extraData: "5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1"
}

/**
 * Real SUI deposit receipt with mainnet configuration
 */
export const REAL_SUI_MAINNET_DEPOSIT_RECEIPT = {
  depositor: {
    identifierHex: "a1b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789ab"
  },
  networkInfo: {
    chainName: "Sui",
    chainId: "1" // SUI mainnet chain ID
  },
  refundLocktime: "1940540",
  refundPublicKeyHash: "c776877c3f9a78f5e3fc7b8b7e5c4a3a2c1a1b2c3d4e5f6a7b8c9d0e1f2a3b4d",
  blindingFactor: "abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab",
  walletPublicKeyHash: "d887988d4f0b89f6f4fd8c9c8f6d5b4b3d2b2c3d4e5f6a7b8c9d0e1f2a3b4c5d",
  userWalletAddress: "0xa1b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789ab",
  btcRecoveryAddress: "bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq",
  extraData: "a1b2c3d4e5f6789abcdef0123456789abcdef0123456789abcdef0123456789ab"
}

/**
 * Deposit state samples based on SUIChainAdapter implementation
 */
export const DEPOSIT_STATE_SAMPLES = {
  pending: {
    status: "pending",
    depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    chainName: "SUI",
    lastUpdated: 1706023200000,
    metadata: {
      walletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
      registrationTime: 1706023200000
    }
  },
  
  confirmed: {
    status: "confirmed",
    depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    chainName: "SUI",
    confirmations: 3,
    requiredConfirmations: 6,
    txHash: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    lastUpdated: 1706023500000,
    metadata: {
      walletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
      registrationTime: 1706023200000
    }
  },
  
  complete: {
    status: "complete",
    depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    chainName: "SUI",
    confirmations: 6,
    requiredConfirmations: 6,
    txHash: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    initializeTxHash: "a3c0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b866",
    lastUpdated: 1706024000000,
    metadata: {
      walletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
      registrationTime: 1706023200000,
      initializeTxHash: "a3c0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b866"
    }
  },
  
  error: {
    status: "error",
    depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    chainName: "SUI",
    error: "SUI wallet connection required to initialize deposit",
    lastUpdated: 1706023800000,
    metadata: {
      walletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
      registrationTime: 1706023200000
    }
  }
}

/**
 * SUI network configuration samples based on token-dashboard config
 */
export const SUI_NETWORK_CONFIG_SAMPLES = {
  testnet: {
    name: "testnet",
    rpcUrl: "https://fullnode.testnet.sui.io:443",
    chainId: "2",
    packageId: "0x1db1fcdaada7c286d77f3347e593e06d8f33b8255e0861033a0a9f321f4eade7",
    bitcoinDepositorModule: "bitcoin_depositor"
  },
  
  mainnet: {
    name: "mainnet", 
    rpcUrl: "https://fullnode.mainnet.sui.io:443",
    chainId: "1",
    packageId: "0x..." // Mainnet package ID would be different
  }
}

/**
 * SUI deposit event samples based on SUIChainAdapter events
 */
export const SUI_DEPOSIT_EVENT_SAMPLES = {
  depositCreated: {
    type: "tbtc-deposit-created",
    detail: {
      depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
      chainName: "SUI",
      depositAmount: "0.01",
      metadata: {
        walletAddress: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
        registrationTime: 1706023200000
      }
    }
  },
  
  depositConfirmed: {
    type: "tbtc-deposit-confirmation",
    detail: {
      depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
      confirmations: 3,
      requiredConfirmations: 6,
      txHash: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    }
  },
  
  depositInitialized: {
    type: "tbtc-sui-deposit-initialized",
    detail: {
      depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
      txHash: "a3c0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b866"
    }
  },
  
  depositCompleted: {
    type: "tbtc-deposit-complete",
    detail: {
      depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
      txHash: "a3c0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b866"
    }
  },
  
  depositError: {
    type: "tbtc-deposit-error", 
    detail: {
      depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
      error: "SUI wallet connection required to initialize deposit"
    }
  },
  
  suiInitialized: {
    type: "tbtc-sui-initialized",
    detail: {
      success: true
    }
  },
  
  suiInitializationError: {
    type: "tbtc-sui-initialized",
    detail: {
      success: false,
      error: "Failed to initialize SUI contracts"
    }
  }
}

/**
 * Real Bitcoin transaction samples for testing
 */
export const BITCOIN_TRANSACTION_SAMPLES = {
  testnet: {
    txHash: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    confirmations: 6,
    blockHeight: 2580123,
    amount: 0.01,
    depositAddress: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    timestamp: 1706023500000
  },
  
  mainnet: {
    txHash: "a3c0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b866",
    confirmations: 6,
    blockHeight: 825000,
    amount: 0.05,
    depositAddress: "bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq",
    timestamp: 1706023500000
  }
}

/**
 * SUI wallet connection samples based on SUIWalletProvider
 */
export const SUI_WALLET_SAMPLES = {
  connected: {
    isConnected: true,
    address: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
    isConnectionRequired: false,
    connectionError: null,
    balance: "1000000000" // 1 SUI in MIST
  },
  
  disconnected: {
    isConnected: false,
    address: null,
    isConnectionRequired: true,
    connectionError: null,
    balance: "0"
  },
  
  connectionError: {
    isConnected: false,
    address: null,
    isConnectionRequired: true,
    connectionError: "Failed to connect to SUI wallet",
    balance: "0"
  },
  
  lowBalance: {
    isConnected: true,
    address: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
    isConnectionRequired: false,
    connectionError: null,
    balance: "10000000" // 0.01 SUI in MIST (low balance)
  }
}

/**
 * Performance metrics samples for testing
 */
export const PERFORMANCE_METRICS_SAMPLES = {
  good: {
    walletConnectionTime: 500,      // 500ms
    addressGenerationTime: 50,      // 50ms
    fileOperationTime: 100,         // 100ms
    networkRequestTime: 800,        // 800ms
    transactionTime: 5000,          // 5s
    totalWorkflowTime: 15000        // 15s
  },
  
  acceptable: {
    walletConnectionTime: 2000,     // 2s
    addressGenerationTime: 200,     // 200ms
    fileOperationTime: 500,         // 500ms
    networkRequestTime: 3000,       // 3s
    transactionTime: 15000,         // 15s
    totalWorkflowTime: 45000        // 45s
  },
  
  poor: {
    walletConnectionTime: 10000,    // 10s
    addressGenerationTime: 1000,    // 1s
    fileOperationTime: 2000,        // 2s
    networkRequestTime: 10000,      // 10s
    transactionTime: 60000,         // 60s
    totalWorkflowTime: 120000       // 2 minutes
  }
}

/**
 * Utility functions for working with real JSON samples
 */
export const JSON_SAMPLE_UTILS = {
  /**
   * Generate a valid filename based on token-dashboard pattern
   */
  generateFilename(userAddress: string, depositAddress: string): string {
    const date = new Date().toISOString().split("T")[0]
    return `${userAddress}_${depositAddress}_${date}.json`
  },
  
  /**
   * Validate deposit receipt structure matches token-dashboard format
   */
  isValidDepositReceipt(receipt: any): boolean {
    const requiredFields = [
      'depositor',
      'networkInfo', 
      'refundLocktime',
      'refundPublicKeyHash',
      'blindingFactor',
      'userWalletAddress',
      'walletPublicKeyHash',
      'btcRecoveryAddress',
      'extraData'
    ]
    
    return requiredFields.every(field => field in receipt) &&
           receipt.depositor?.identifierHex &&
           receipt.networkInfo?.chainName === "Sui"
  },
  
  /**
   * Create a custom deposit receipt with provided data
   */
  createCustomReceipt(data: {
    userWalletAddress: string
    btcRecoveryAddress: string
    chainId?: string
    network?: 'testnet' | 'mainnet'
  }): any {
    const isTestnet = data.network === 'testnet' || data.chainId === '2'
    
    return {
      depositor: {
        identifierHex: data.userWalletAddress.replace('0x', '')
      },
      networkInfo: {
        chainName: "Sui",
        chainId: data.chainId || (isTestnet ? "2" : "1")
      },
      refundLocktime: "1940540",
      refundPublicKeyHash: "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
      blindingFactor: "3456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef012",
      walletPublicKeyHash: "b776877c3f9a78f5e3fc7b8b7e5c4a3a2c1a1b2c3d4e5f6a7b8c9d0e1f2a3b4c",
      userWalletAddress: data.userWalletAddress,
      btcRecoveryAddress: data.btcRecoveryAddress,
      extraData: data.userWalletAddress.replace('0x', '')
    }
  },
  
  /**
   * Generate test filenames for different scenarios
   */
  getTestFilenames(): string[] {
    const baseData = [
      {
        user: "0x5e93a736d04fbb25737aa40bee40171ef79f65fae833749e3c089fe7cc2161f1",
        deposit: "tb1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh"
      },
      {
        user: "0x86e7f9bbe8b13187666193c6eff77a3220665cb21cac30ddf066416fc4b14c13",
        deposit: "tb1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq"
      }
    ]
    
    return baseData.map(data => this.generateFilename(data.user, data.deposit))
  }
}